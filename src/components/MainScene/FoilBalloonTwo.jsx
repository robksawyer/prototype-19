/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF, useHelper } from '@react-three/drei';
import { useLoader, useThree } from '@react-three/fiber';
import { TextureLoader } from 'three/src/loaders/TextureLoader';

export default function FoilBalloonTwo(props) {
  const [colorMap, displacementMap, normalMap, roughnessMap] = useLoader(
    TextureLoader,
    [
      '/3d/models/foil_balloon_two/textures/plastic_Mat_baseColor.png',
      '/3d/models/foil_balloon_two/textures/plastic_Mat_roughness.png',
      '/3d/models/foil_balloon_two/textures/plastic_Mat_normal.png',
      '/3d/models/foil_balloon_two/textures/plastic_Mat_metallic.png',
    ],
  );
  const { scene } = useThree();
  const group = useRef();
  const spotLight = React.useRef();
  const mesh = React.useRef();

  const { nodes, materials } = useGLTF(
    '/3d/models/foil_balloon_two/foil_balloon_two.gltf',
  );

  // React.useEffect(() => {
  //   spotLight.current.target = mesh.current;
  // }, [scene]);

  // useHelper(spotLight, THREE.SpotLightHelper, 'teal');

  return (
    <group ref={group} {...props} dispose={null}>
      {/* <spotLight
        castShadow
        position={[5, 4, 10]}
        ref={spotLight}
        angle={0.5}
        distance={5}
      /> */}
      <mesh
        ref={mesh}
        castShadow
        receiveShadow
        geometry={nodes.foil_balloon_two.geometry}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.05, 0.05, 0.05]}
      >
        <meshStandardMaterial
          map={colorMap}
          displacementMap={displacementMap}
          normalMap={normalMap}
          roughnessMap={roughnessMap}
          // aoMap={aoMap}
          metalness={1}
          roughness={0}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload('/3d/models/foil_balloon_two/foil_balloon_two.gltf');
